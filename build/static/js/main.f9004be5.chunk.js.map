{"version":3,"sources":["components/buttons/ButtonFavorites/bookmark-solid.svg","components/buttons/Complete/Complete.jsx","components/TodoItem/TodoItem.jsx","components/buttons/ButtonShowForm/ButtonShowForm.jsx","components/Navigation/Navigation.jsx","components/Input/Input.jsx","components/InputDate/InputDate.jsx","components/buttons/ButtonBack/ButtonBack.jsx","components/buttons/ButtonAdd/ButtonAdd.jsx","components/ItemForm/ItemForm.jsx","components/buttons/ButtonDelete/ButtonDelete.jsx","components/buttons/ButtonFavorites/ButtonFavorites.jsx","components/TodoItemShow/TodoItemShow.jsx","components/TodoList/TodoList.jsx","components/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Complete","props","classes","class","react_default","a","createElement","className","onClick","onComplete","TodoItem","classDescription","classLi","classComplete","item","complete","value","Object","toConsumableArray","length","splice","todoItemShow","buttons_Complete_Complete","id","ButtonShowForm","_ref","showAddForm","Navigation","allItems","favoriteItems","compliteItems","buttons_ButtonShowForm_ButtonShowForm","Input","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeValue","e","setState","target","getValue","onKeyDown","code","state","type","placeholder","onChange","Component","InputDate","changeValue","getDate","ButtonBack","handleShowAddForm","ButtonAdd","addItem","ItemForm","date","components_Input_Input","buttons_ButtonAdd_ButtonAdd","buttons_ButtonBack_ButtonBack","components_InputDate_InputDate","ButtonDelete","delete","ButtonFavorites","classFavorite","favorite","src","image","alt","TodoItemShow","defaultDate","defaultValue","buttons_ButtonFavorites_ButtonFavorites","onFavorite","buttons_ButtonDelete_ButtonDelete","TodoList","showForm","onDelete","data","map","components_TodoItem_TodoItem","key","uuidv4","items","filter","classMain","components_ItemForm_ItemForm","showItem","swithShowItem","switch","components_TodoItemShow_TodoItemShow","components_Navigation_Navigation","itemsNav","App","replace","concat","_ref2","_ref3","_ref4","updateStorage","JSON","stringify","localStorage","setItem","switchItems","storage","parse","getItem","Fragment","components_TodoList_TodoList","ReactDOM","createRoot","document","getElementById","render","StrictMode","components_App_App"],"mappings":"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","file":"static/js/main.f9004be5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bookmark-solid.ac52b8f7.svg\";","import React from 'react';\r\n\r\nimport './Complete.css';\r\n\r\nconst Complete = (props) => {\r\n\r\n  let classes = 'complete-btn ';\r\n  if (props.class) {\r\n    classes += 'complete';\r\n  }\r\n\r\n  return (\r\n\r\n    <button \r\n      className={classes}\r\n      onClick={props.onComplete}>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Complete;\r\n","import React from 'react';\r\nimport Complete from '../buttons/Complete/Complete';\r\nimport './TodoItem.css';\r\n\r\nfunction TodoItem (props) {\r\n\r\n  let todoItemShow = () => {\r\n    props.todoItemShow(props.item);\r\n  };\r\n\r\n  let onComplete = () => {\r\n    let id = props.item.id;\r\n    let complete = props.item.complete\r\n    props.onComplete(id, !complete);\r\n  };\r\n\r\n  let classDescription = '';\r\n  let classLi = 'list__item';\r\n  let classComplete = false;\r\n\r\n  if (props.item.complete) {\r\n    classDescription += 'list__item--complete';\r\n    classLi += ' list__item-bg';\r\n    classComplete = true\r\n  }\r\n\r\n  let value = [...props.item.value];\r\n  if (value.length > 20) {\r\n    value = value.splice(0, 20);\r\n    value[20] = ('...');\r\n  }\r\n\r\n  return (\r\n    <li className={classLi}>\r\n      <p className={classDescription} onClick={todoItemShow}>\r\n        {value}\r\n      </p>\r\n      <Complete \r\n        onComplete={onComplete} \r\n        class={classComplete}\r\n      />\r\n    </li>\r\n  );\r\n}\r\nexport default TodoItem;","import React from 'react';\r\nimport './ButtonShowForm.css';\r\n\r\nconst ButtonShowForm = ({showAddForm}) => {\r\n  return (\r\n    <div \r\n      className='navigation__showForm' \r\n      onClick={showAddForm} \r\n    />\r\n  );\r\n}\r\n\r\nexport default ButtonShowForm;\r\n","import React from 'react';\r\n\r\nimport './Navigation.css';\r\nimport ButtonShowForm from '../buttons/ButtonShowForm/ButtonShowForm';\r\n\r\nconst Navigation = (props) => {\r\n\r\n  let showAddForm = () => {\r\n    props.showAddForm();\r\n  }\r\n\r\n\r\n  let {allItems, favoriteItems, compliteItems} = props;\r\n  return (\r\n\r\n    <div className='navigation'>\r\n      <div className='navigation__buttons'>\r\n        <button onClick={allItems}>все</button>\r\n        <button onClick={favoriteItems}>избранное</button>\r\n        <button onClick={compliteItems}>выполнено</button>\r\n      </div>\r\n      <ButtonShowForm showAddForm={showAddForm}/>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport './Input.css';\r\n\r\nclass Input extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value:  '',\r\n    }\r\n  }\r\n\r\n  onChangeValue = (e) => {\r\n    this.setState({value: e.target.value});\r\n    this.props.getValue(e.target.value);\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    if (e.code === 'Enter') {\r\n      this.props.getValue()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input \r\n        className='input' \r\n        type= {'text'} \r\n        placeholder= {'...'} \r\n        onChange= {this.onChangeValue}\r\n        onKeyDown= {this.onKeyDown}\r\n        value = {this.state.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport './InputDate.css'\r\n\r\nclass InputDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  };\r\n\r\n  changeValue = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n    this.props.getDate(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        placeholder='введите дату'\r\n        className='form-date'\r\n        type='input'\r\n        onChange={this.changeValue}\r\n        value={this.state.value} \r\n      />\r\n    )\r\n  }\r\n};\r\n\r\nexport default InputDate;\r\n","import React from 'react';\r\n\r\nimport './ButtonBack.css';\r\n\r\nconst ButtonBack = (props) => {\r\n  return (\r\n    <button \r\n      className='buttonBack' \r\n      onClick={props.handleShowAddForm}\r\n    >\r\n      x\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonBack;\r\n","import React from 'react';\r\n\r\nimport './ButtonAdd.css';\r\n\r\nconst ButtonAdd = (props) => {\r\n\r\n  let btnClick = () => {\r\n    props.addItem();\r\n    props.handleShowAddForm();\r\n  }\r\n\r\n  return (\r\n    <button \r\n      className='btn-add' \r\n      onClick={btnClick}\r\n    >\r\n      +\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonAdd;\r\n","\r\nimport React, { Component } from 'react';\r\nimport './ItemForm.css';\r\nimport Input from '../Input/Input';\r\nimport InputDate from '../InputDate/InputDate';\r\nimport ButtonBack from '../buttons/ButtonBack/ButtonBack';\r\nimport ButtonAdd from '../buttons/ButtonAdd/ButtonAdd';\r\n\r\n\r\nclass ItemForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      date: ''\r\n    }\r\n  }\r\n  getValue = (value) => {\r\n    this.setState({\r\n      value: value\r\n    })\r\n  };\r\n\r\n  getDate = (date) => {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  };\r\n\r\n  addItem = () => {\r\n    let value = this.state.value\r\n    let date = this.state.date\r\n    this.props.addItem(value, date);\r\n  };\r\n\r\n  render() {\r\n    let {handleShowAddForm} = this.props\r\n    return (\r\n      <div className='addForm'>\r\n        <div>\r\n          <Input\r\n            getValue={this.getValue}\r\n            handleShowAddForm={handleShowAddForm} \r\n          />\r\n          <ButtonAdd\r\n            addItem={this.addItem}\r\n            handleShowAddForm={handleShowAddForm} \r\n          />\r\n        </div>\r\n        <ButtonBack handleShowAddForm={handleShowAddForm}/>\r\n        <InputDate getDate={this.getDate}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ItemForm;","import React from 'react';\r\n\r\nimport './ButtonDelete.css';\r\n\r\nconst ButtonDelete = (props) => {\r\n  return (\r\n    <button \r\n    className='btn-delete' \r\n    onClick={props.delete}\r\n    >\r\n      X\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonDelete;\r\n","import React from 'react';\r\n\r\nimport './ButtonFavorites.css';\r\nimport image from './bookmark-solid.svg';\r\n\r\nconst ButtonFavorites = ({classFavorite, favorite}) => {\r\n\r\n  let classes = 'btnFavorites';\r\n  if (classFavorite) {\r\n    classes = 'btnFavorites' + classFavorite;\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={classes} \r\n      onClick={favorite}\r\n    >\r\n      <img src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonFavorites;\r\n","import React from 'react';\r\n\r\nimport ButtonBack from '../buttons/ButtonBack/ButtonBack';\r\nimport ButtonDelete from '../buttons/ButtonDelete/ButtonDelete';\r\nimport ButtonFavorites from '../buttons/ButtonFavorites/ButtonFavorites';\r\n\r\nimport './TodoItemShow.css';\r\n\r\nconst TodoItemShow = (props) => {\r\n\r\n  let onDelete = () => {\r\n    let id = props.item.id;\r\n    props.handleShowAddForm();\r\n    return props.delete(id);\r\n  };\r\n\r\n  let onFavorite = () => {\r\n    let id = props.item.id;\r\n    let favorite = props.item.favorite\r\n    props.onFavorite(id, !favorite);\r\n  };\r\n\r\n  let classFavorite = '';\r\n    if (props.item.favorite) {\r\n      classFavorite += ' classFavorite';\r\n    };\r\n\r\n  let defaultDate;\r\n  if (props.item.date) {\r\n    defaultDate = props.item.date;\r\n  };\r\n\r\n  let func = (e) => {\r\n\r\n  }\r\n\r\n  let {handleShowAddForm} = props\r\n  return (\r\n    <div className='todoItemShow'>\r\n      <p>{props.item.value}</p>\r\n      <input \r\n        type='input' \r\n        defaultValue={defaultDate} \r\n        className='form-date'\r\n        placeholder='Нет даты'\r\n      />\r\n      <ButtonBack handleShowAddForm={handleShowAddForm}/>\r\n      <div className=\"buttons\">\r\n        <ButtonFavorites\r\n          favorite={onFavorite}\r\n          classFavorite={classFavorite} \r\n        />\r\n        <ButtonDelete delete={onDelete} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoItemShow;\r\n","import React from 'react';\r\n\r\nimport './TodoList.css'; \r\nimport  ListItem from '../TodoItem/TodoItem';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport ItemForm from '../ItemForm/ItemForm';\r\nimport TodoItemShow from '../TodoItemShow/TodoItemShow';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TodoList = (props) => {\r\n\r\n  let onDelete = (id) => {\r\n    props.delete(id)\r\n  };\r\n\r\n  let onComplete = (id, complete) => {\r\n    props.onComplete(id, complete)\r\n  };\r\n\r\n  let onFavorite = (id, favorite) => {\r\n    props.onFavorite(id, favorite)\r\n  };\r\n\r\n  let handleAllItems = () => {\r\n    props.items('all')\r\n  };\r\n\r\n  let handleFavoriteItems = () => {\r\n    props.items('favorites')\r\n  };\r\n\r\n  let handleCompliteItems = () => {\r\n    props.items('complites')\r\n  };\r\n\r\n  let handleShowAddForm = () => {\r\n    props.handleShowAddForm()\r\n  };\r\n\r\n  let handleShowItem = () => {\r\n    props.swithShowItem()\r\n  };\r\n\r\n  let items = () => {\r\n    let items;\r\n    if (props.itemsNav === 'all') {\r\n        items = allItems();\r\n    } else if (props.itemsNav === 'favorites') {\r\n        items = favoriteItems();\r\n    } else if (props.itemsNav === 'complites') {\r\n      items = compliteItems();\r\n    }\r\n    if (items.length === 0) {\r\n      return <p className='list-item__nothing'>у вас нет заметок</p> \r\n    }\r\n    return items;\r\n  };\r\n\r\n  let allItems = () => {\r\n    let items = props.data.map(item => {\r\n    return (\r\n      <ListItem \r\n        item={item} \r\n        key={uuidv4()} \r\n        delete={onDelete} \r\n        onComplete={onComplete}\r\n        onFavorite={onFavorite}\r\n        handleShowAddForm={handleShowAddForm}\r\n        todoItemShow={todoItemShow}\r\n      />\r\n    )\r\n    })\r\n    return items;\r\n  };\r\n\r\n  let favoriteItems = () => { \r\n    let items = props.data.filter(item => item.favorite);\r\n    items = items.map(item => {\r\n      return (\r\n        <ListItem \r\n          item={item} \r\n          key={item.id} \r\n          delete={onDelete} \r\n          onComplete={onComplete}\r\n          onFavorite={onFavorite}\r\n          todoItemShow={todoItemShow}\r\n        />\r\n      )\r\n      })\r\n    return items;\r\n  }\r\n\r\n  let compliteItems = () => {\r\n    let items = props.data.filter(item => item.complete);\r\n    items = items.map(item => {\r\n      return (\r\n        <ListItem \r\n          item={item} \r\n          key={item.id} \r\n          delete={onDelete} \r\n          onComplete={onComplete}\r\n          onFavorite={onFavorite}\r\n          todoItemShow={todoItemShow}\r\n        />\r\n      )\r\n      })\r\n    return items;\r\n  };\r\n\r\n  let classMain = '';\r\n  let showForm;\r\n  if (props.showAddForm) {\r\n    classMain += 'list__main-blur'\r\n    showForm = \r\n      <ItemForm \r\n        handleShowAddForm={handleShowAddForm} \r\n        addItem={props.addItem}\r\n      />\r\n  };\r\n\r\n  let todoItemShow = (item) => {\r\n    props.swithShowItem(item);\r\n  };\r\n\r\n  let showItem;\r\n  if (props.showItem.switch) {\r\n    let item = props.showItem.item;\r\n    classMain += 'list__main-blur'\r\n    showItem = \r\n      <TodoItemShow \r\n        item={item} \r\n        delete={onDelete}\r\n        onFavorite={onFavorite}\r\n        complete={onComplete}\r\n        handleShowAddForm={handleShowItem}\r\n      />\r\n  };\r\n  \r\n  return (\r\n    <ul className='list'>\r\n      <div className={classMain}>\r\n        <Navigation \r\n          allItems={handleAllItems} \r\n          favoriteItems={handleFavoriteItems} \r\n          compliteItems={handleCompliteItems}\r\n          showAddForm={handleShowAddForm}\r\n        />\r\n        {items()}\r\n      </div>\r\n      {showForm}\r\n      {showItem}\r\n    </ul>\r\n    \r\n  );\r\n}\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport TodoList from '../TodoList/TodoList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    let storage = JSON.parse(localStorage.getItem('items'));\r\n    this.state = {\r\n      data:  storage || [],\r\n      items: 'all',\r\n      showAddForm: false,\r\n      showItem: {\r\n        switch: false,\r\n        item: []\r\n      }\r\n    }\r\n  }\r\n\r\n  addItem = (value, date) => {\r\n    let str = value.replace(/\\s+/g, '');\r\n    if (str) {\r\n      let id = uuidv4();\r\n      let item = \r\n        {\r\n          value: value, \r\n          id: id, \r\n          date: date, \r\n          complete: false, \r\n          favorite: false\r\n        }\r\n      this.setState(({data}) => {\r\n        const newArr = [item, ...data];\r\n        return {\r\n          data: newArr,\r\n          items: 'all'\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    this.setState(({data}) => {\r\n       let newArr = data.filter((item) => {\r\n        return item.id !== id;\r\n       })\r\n       return {data: newArr}\r\n      })\r\n  };\r\n\r\n  onComplete = (id, complete) => {\r\n    this.setState(({data}) => {\r\n      \r\n      let newArr = data.map(item => {\r\n        if (item.id === id) {\r\n          item.complete = complete\r\n        }\r\n        return item;\r\n      })\r\n      return {data: newArr}\r\n     })\r\n  };\r\n\r\n  onFavorite = (id, favorite) => {\r\n    this.setState(({data}) => {\r\n\r\n      let newArr = data.map(item => {\r\n        if (item.id === id) {\r\n          item.favorite = favorite\r\n        }\r\n        return item;\r\n      })\r\n      return {data: newArr}\r\n    })\r\n  };\r\n\r\n  updateStorage = () => {\r\n    const data = JSON.stringify(this.state.data);\r\n    localStorage.setItem(`items`, data)\r\n  };\r\n\r\n  switchItems = (items) => {\r\n    this.setState({\r\n      items: items\r\n    })\r\n  };\r\n\r\n  showAddForm = () => {\r\n    this.setState({\r\n      showAddForm: !this.state.showAddForm\r\n    })\r\n  };\r\n\r\n  swithShowItem = (item) => {\r\n    this.setState({\r\n      showItem: {\r\n        switch: !this.state.showItem.switch,\r\n        item: item\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {data} = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className='header'>\r\n          <p>Todo - list</p>\r\n        </div>\r\n        <main className='main'>\r\n          <TodoList \r\n            items={this.switchItems}\r\n            itemsNav={this.state.items}\r\n            data={data} \r\n            delete={this.onDelete} \r\n            onComplete={this.onComplete}\r\n            onFavorite={this.onFavorite}\r\n            addItem={this.addItem}\r\n            handleShowAddForm={this.showAddForm}\r\n            showAddForm={this.state.showAddForm}\r\n            swithShowItem={this.swithShowItem}\r\n            showItem={this.state.showItem}\r\n          />\r\n          {this.updateStorage()}\r\n        </main>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n/*\r\n  1) переделать показ инпута на компонент +\r\n  3) сделать окно с красивой надписью таска +\r\n  4) перенести все кнопки редактирования, удаления в окно с таском +\r\n  5) добавить кружок на таске по нажатию которого таск будет выполнен +\r\n  6) пересмотреть весь код на написание адекватных названий переменных\r\n  7) адаптировать всё под мобильные устройства +\r\n  8) сделать выход из окна таска по нажатию вне таска\r\n*/ ","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './components/App/App';\r\nimport './index.css'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}